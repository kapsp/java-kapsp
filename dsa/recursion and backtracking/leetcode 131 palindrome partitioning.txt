class Solution {
    public List<List<String>> partition(String s) {
        List<List<String>> res=new ArrayList<List<String>>();
        List<String> curr=new ArrayList<>();
        int start=0;
        btws(s,res,curr,start);
        return res;
        
    }

    private void btws(String s,List<List<String>> res,List<String> curr,int start){
        if(start==s.length()){
            res.add(new ArrayList<>(curr));
            return;
        }

        for(int end =start;end<s.length();end++){
            if(isPal(s,start,end)){
                curr.add(s.substring(start,end+1));
                btws(s,res,curr,end+1);
                curr.remove(curr.size()-1);

            }
        }
    }

    private boolean isPal(String s,int low,int high){
        while(low<high){
            if(s.charAt(low)!=s.charAt(high)){
                return false;
            }
            low ++;
            high--;
        }
        return true;
    }
}
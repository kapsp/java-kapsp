class Solution {
    public List<List<Integer>> combinationSum2(int[] candidates, int target) {
        List<List<Integer>> res=new ArrayList<List<Integer>>();
        Arrays.sort(candidates);
        List<Integer> curr=new ArrayList<>();
        int start=0;
        btcs(candidates,target,start,res,curr);
        return res;
    }

    private void btcs(int [] candidates,int target,int start,List<List<Integer>> res,List<Integer> curr){
        if(target==0){
            res.add(new ArrayList<>(curr));
        }else if(target<0){
            return;
        }
        
        for(int i=start;i<candidates.length;i++){
            if(i==start ||candidates[i]!=candidates[i-1]){
                curr.add(candidates[i]);
                btcs(candidates,target-candidates[i],i+1,res,curr);
                curr.remove(curr.size()-1);
            }
        }
    }
}
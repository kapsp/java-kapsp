import java.util.HashMap;
import java.util.Map;
class Solution {
    public String minWindow(String s, String t) {
        if(s.length()==0||t.length()==0||s.length()<t.length()){
            return "";
        }

        Map<Character,Integer> tfreq= new HashMap<>();
        for(char c:t.toCharArray()){
            if(tfreq.containsKey(c)){
                tfreq.put(c,tfreq.get(c)+1);
            }else{
            tfreq.put(c,1);
            }
        }

        int left=0;
        int start=0;
        int minlen=Integer.MAX_VALUE;
        int matched=0;
            Map<Character,Integer> wfreq= new HashMap<>();
        for(int right=0;right<s.length();right++){
            char c=s.charAt(right);
                if(wfreq.containsKey(c)){
                    wfreq.put(c,wfreq.get(c)+1);
                }
                else{
                wfreq.put(c,1);
                }

              if(tfreq.containsKey(c)&& wfreq.get(c).intValue()==tfreq.get(c).intValue()){
                matched++;
              }

              while(matched==tfreq.size()){
                if(right-left+1<minlen){
                    minlen=right-left+1;
                    start=left;
                }

             char leftc = s.charAt(left);
             if(wfreq.containsKey(leftc)){
                wfreq.put(leftc, wfreq.get(leftc) - 1);

                if (tfreq.containsKey(leftc) && wfreq.get(leftc).intValue() < tfreq.get(leftc).intValue()) {
                    matched--;
                }


             }
   
                left++;
              }
        }

        return minlen==Integer.MAX_VALUE?"":s.substring(start,start+minlen);

    }
}
